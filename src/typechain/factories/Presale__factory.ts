/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Presale, PresaleInterface } from "../Presale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary_",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracle_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountZero",
    type: "error",
  },
  {
    inputs: [],
    name: "Closed",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OverHardCap",
    type: "error",
  },
  {
    inputs: [],
    name: "OverMaxContribution",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "UnapprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnderMinContribution",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Contribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "TokenState",
    type: "event",
  },
  {
    inputs: [],
    name: "HARD_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "contribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved",
        type: "bool[]",
      },
    ],
    name: "setApprovedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "setBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "setMaxContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState",
        type: "bool",
      },
    ],
    name: "setSaleOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600160146101000a81548160ff02191690831515021790555069010f0cf064dd59200000600455678ac7230489e800006005553480156200004657600080fd5b5060405162001d0238038062001d0283398181016040528101906200006c919062000400565b60016000819055506200009462000088620000be60201b60201c565b620000c660201b60201c565b620000a5826200018c60201b60201c565b620000b6816200027060201b60201c565b505062000512565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200019c620000be60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001c26200035460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200021b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002129062000468565b60405180910390fd5b6200022c816200037e60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62000280620000be60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002a66200035460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002f69062000468565b60405180910390fd5b62000310816200037e60201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620003e6576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600081519050620003fa81620004f8565b92915050565b600080604083850312156200041457600080fd5b60006200042485828601620003e9565b92505060206200043785828601620003e9565b9150509250929050565b6000620004506020836200048a565b91506200045d82620004cf565b602082019050919050565b60006020820190508181036000830152620004838162000441565b9050919050565b600082825260208201905092915050565b6000620004a882620004af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b62000503816200049b565b81146200050f57600080fd5b50565b6117e080620005226000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637adbf973116100a25780638da5cb5b116100715780638da5cb5b146102a957806392463bed146102c7578063aaffadf3146102e3578063af979f2514610301578063f2fde38b1461031d57610116565b80637adbf973146102355780637dc0d1d0146102515780638418cd991461026f5780638d3d65761461028b57610116565b80633a03171c116100e95780633a03171c1461018f57806342e94c90146101ad57806347535d7b146101dd5780636d1ea3fa146101fb578063715018a61461022b57610116565b806303ed9d211461011b578063112f1907146101375780631c31f7101461015557806338af3eed14610171575b600080fd5b61013560048036038101906101309190611308565b610339565b005b61013f6103ec565b60405161014c9190611494565b60405180910390f35b61016f600480360381019061016a91906111e5565b6103f2565b005b6101796104bb565b60405161018691906113c7565b60405180910390f35b6101976104e1565b6040516101a49190611494565b60405180910390f35b6101c760048036038101906101c291906111e5565b6104ef565b6040516101d49190611494565b60405180910390f35b6101e5610507565b6040516101f29190611419565b60405180910390f35b610215600480360381019061021091906111e5565b61051a565b6040516102229190611419565b60405180910390f35b61023361053a565b005b61024f600480360381019061024a91906111e5565b6105c2565b005b61025961068b565b60405161026691906113c7565b60405180910390f35b6102896004803603810190610284919061120e565b6106b1565b005b610293610a81565b6040516102a09190611494565b60405180910390f35b6102b1610a87565b6040516102be91906113c7565b60405180910390f35b6102e160048036038101906102dc919061124a565b610ab1565b005b6102eb610d3f565b6040516102f89190611494565b60405180910390f35b61031b600480360381019061031691906112b6565b610d45565b005b610337600480360381019061033291906111e5565b610e35565b005b610341610f2d565b73ffffffffffffffffffffffffffffffffffffffff1661035f610a87565b73ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ac90611454565b60405180910390fd5b60008114156103e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b8060048190555050565b60065481565b6103fa610f2d565b73ffffffffffffffffffffffffffffffffffffffff16610418610a87565b73ffffffffffffffffffffffffffffffffffffffff161461046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590611454565b60405180910390fd5b61047781610f35565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b69065a4da25d3016c0000081565b60076020528060005260406000206000915090505481565b600160149054906101000a900460ff1681565b60086020528060005260406000206000915054906101000a900460ff1681565b610542610f2d565b73ffffffffffffffffffffffffffffffffffffffff16610560610a87565b73ffffffffffffffffffffffffffffffffffffffff16146105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90611454565b60405180910390fd5b6105c06000610f9f565b565b6105ca610f2d565b73ffffffffffffffffffffffffffffffffffffffff166105e8610a87565b73ffffffffffffffffffffffffffffffffffffffff161461063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063590611454565b60405180910390fd5b61064781610f35565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005414156106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90611474565b60405180910390fd5b6002600081905550600160149054906101000a900460ff16610745576040517f1cdde67b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107d357816040517f14ff73380000000000000000000000000000000000000000000000000000000081526004016107ca91906113c7565b60405180910390fd5b600081141561080e576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055481101561084a576040517f438e7e1a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454811115610886576040517facd3e80b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b69065a4da25d3016c000006006548261089f919061153d565b11156108ef57600654816108b3919061153d565b6040517f47403d260000000000000000000000000000000000000000000000000000000081526004016108e69190611494565b60405180910390fd5b8060066000828254610901919061153d565b9250508190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610957919061153d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016109bd939291906113e2565b602060405180830381600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906112df565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f71be8766c1bd9bb33623f518aecc1d98612c75b596f4a0c38408f72239ef4e6083604051610a6d9190611494565b60405180910390a360016000819055505050565b60045481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ab9610f2d565b73ffffffffffffffffffffffffffffffffffffffff16610ad7610a87565b73ffffffffffffffffffffffffffffffffffffffff1614610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2490611454565b60405180910390fd5b60005b8251811015610d3a57610b82838281518110610b75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610f35565b818181518110610bbb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160086000858481518110610c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110610c92577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167fb68249cfdf717e902bb48a62af12f230e222538141616fcf91517900ae354d0b838381518110610d0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610d1f9190611419565b60405180910390a28080610d329061160c565b915050610b30565b505050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610dd65750610da6610a87565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610e1857336040517f8e4a23d6000000000000000000000000000000000000000000000000000000008152600401610e0f91906113c7565b60405180910390fd5b80600160146101000a81548160ff02191690831515021790555050565b610e3d610f2d565b73ffffffffffffffffffffffffffffffffffffffff16610e5b610a87565b73ffffffffffffffffffffffffffffffffffffffff1614610eb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea890611454565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1890611434565b60405180910390fd5b610f2a81610f9f565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611078611073846114d4565b6114af565b9050808382526020820190508285602086028201111561109757600080fd5b60005b858110156110c757816110ad888261113d565b84526020840193506020830192505060018101905061109a565b5050509392505050565b60006110e46110df84611500565b6114af565b9050808382526020820190508285602086028201111561110357600080fd5b60005b85811015611133578161111988826111a6565b845260208401935060208301925050600181019050611106565b5050509392505050565b60008135905061114c81611765565b92915050565b600082601f83011261116357600080fd5b8135611173848260208601611065565b91505092915050565b600082601f83011261118d57600080fd5b813561119d8482602086016110d1565b91505092915050565b6000813590506111b58161177c565b92915050565b6000815190506111ca8161177c565b92915050565b6000813590506111df81611793565b92915050565b6000602082840312156111f757600080fd5b60006112058482850161113d565b91505092915050565b6000806040838503121561122157600080fd5b600061122f8582860161113d565b9250506020611240858286016111d0565b9150509250929050565b6000806040838503121561125d57600080fd5b600083013567ffffffffffffffff81111561127757600080fd5b61128385828601611152565b925050602083013567ffffffffffffffff8111156112a057600080fd5b6112ac8582860161117c565b9150509250929050565b6000602082840312156112c857600080fd5b60006112d6848285016111a6565b91505092915050565b6000602082840312156112f157600080fd5b60006112ff848285016111bb565b91505092915050565b60006020828403121561131a57600080fd5b6000611328848285016111d0565b91505092915050565b61133a81611593565b82525050565b611349816115a5565b82525050565b600061135c60268361152c565b9150611367826116c4565b604082019050919050565b600061137f60208361152c565b915061138a82611713565b602082019050919050565b60006113a2601f8361152c565b91506113ad8261173c565b602082019050919050565b6113c1816115d1565b82525050565b60006020820190506113dc6000830184611331565b92915050565b60006060820190506113f76000830186611331565b6114046020830185611331565b61141160408301846113b8565b949350505050565b600060208201905061142e6000830184611340565b92915050565b6000602082019050818103600083015261144d8161134f565b9050919050565b6000602082019050818103600083015261146d81611372565b9050919050565b6000602082019050818103600083015261148d81611395565b9050919050565b60006020820190506114a960008301846113b8565b92915050565b60006114b96114ca565b90506114c582826115db565b919050565b6000604051905090565b600067ffffffffffffffff8211156114ef576114ee611684565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561151b5761151a611684565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000611548826115d1565b9150611553836115d1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561158857611587611655565b5b828201905092915050565b600061159e826115b1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6115e4826116b3565b810181811067ffffffffffffffff8211171561160357611602611684565b5b80604052505050565b6000611617826115d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561164a57611649611655565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61176e81611593565b811461177957600080fd5b50565b611785816115a5565b811461179057600080fd5b50565b61179c816115d1565b81146117a757600080fd5b5056fea26469706673582212200555374de56018dad755b7c2b9d6af884d6f37b375b53a64bbb8a57e03d78df364736f6c63430008040033";

export class Presale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    beneficiary_: string,
    oracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Presale> {
    return super.deploy(
      beneficiary_,
      oracle_,
      overrides || {}
    ) as Promise<Presale>;
  }
  getDeployTransaction(
    beneficiary_: string,
    oracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(beneficiary_, oracle_, overrides || {});
  }
  attach(address: string): Presale {
    return super.attach(address) as Presale;
  }
  connect(signer: Signer): Presale__factory {
    return super.connect(signer) as Presale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleInterface {
    return new utils.Interface(_abi) as PresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Presale {
    return new Contract(address, _abi, signerOrProvider) as Presale;
  }
}
